library IEEE;
use IEEE.std_logic_1164.all;

entity projeto_demo is
    port(
        CLOCK_50 	: in std_logic;
        SW          : in std_logic_vector(1 downto 0);
        LEDR        : out std_logic_vector(3 downto 0);
        HEX0        : out std_logic_vector(6 downto 0);
        HEX1        : out std_logic_vector(6 downto 0)
        LEDG        : out std_logic_vector(0 downto 0)
    );
end projeto_demo;


architecture Structural of projeto_demo is
    signal count_number                    : std_logic_vector(3 downto 0);
    signal bcd_outUnits, bcd_outDozens     : std_logic_vector(3 downto 0);
    signal clk_4hz                         : std_logic;
begin 
    FreqDivider         : entity work.ClkDividerN(Behavioral)
            generic map (divFactor  => 12500000)
            port map(clkIn          => CLOCK_50,
                    clkOut          => clk_4hz);

    Counter             : entity work.Counter(Behavioral)
            port map(clk            => CLOCK_50,
                    reset           => not(KEY(0)),
                    enable          => SW(0),
                    max             => LEDG(0),
                    count           => count_number);

    BinToBCD            : entity work.BinToBCD(Behavioral)
            port map(bindata    => count_number,
                    dec_out_d   => bcd_outDozens,
                    dec_out_u   => bcd_outUnits);
    
    Bin7SegDecoderUnits  : entity work.Bin7SegDecoder(Behavioral)
            port map(enable         => SW(1),
                    binInput        => dec_out_u,
                    decOut_n        => HEX0);
    
    Bin7SegDecoderDozen  : entity work.Bin7SegDecoder(Behavioral)
            port map(enable         => SW(1),
                    binInput        => dec_out_d,
                    decOut_n        => HEX1);

    LEDR <= count_number;
    
end Structural;