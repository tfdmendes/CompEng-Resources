/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("decodedIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("decodedIn[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("decodedIn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "decodedIn";
}

SIGNAL("encodedOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("encodedOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "encodedOut";
}

SIGNAL("encodedOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "encodedOut";
}

SIGNAL("encodedOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "encodedOut";
}

SIGNAL("encodedOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "encodedOut";
}

SIGNAL("validOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("decodedIn[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 990.0;
		}
	}
}

TRANSITION_LIST("decodedIn[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 970.0;
		}
	}
}

TRANSITION_LIST("decodedIn[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 930.0;
		}
	}
}

TRANSITION_LIST("decodedIn[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 910.0;
		}
	}
}

TRANSITION_LIST("decodedIn[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 890.0;
		}
	}
}

TRANSITION_LIST("decodedIn[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 870.0;
		}
	}
}

TRANSITION_LIST("decodedIn[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 850.0;
		}
	}
}

TRANSITION_LIST("decodedIn[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 830.0;
		}
	}
}

TRANSITION_LIST("decodedIn[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 810.0;
		}
	}
}

TRANSITION_LIST("decodedIn[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 790.0;
		}
	}
}

TRANSITION_LIST("decodedIn[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 770.0;
		}
	}
}

TRANSITION_LIST("decodedIn[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 750.0;
		}
	}
}

TRANSITION_LIST("decodedIn[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 730.0;
		}
	}
}

TRANSITION_LIST("decodedIn[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 710.0;
		}
	}
}

TRANSITION_LIST("decodedIn[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 690.0;
		}
	}
}

TRANSITION_LIST("decodedIn[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 670.0;
		}
	}
}

TRANSITION_LIST("encodedOut[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.003;
			LEVEL X FOR 3.999;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.425;
			LEVEL 1 FOR 8.575;
			LEVEL 0 FOR 11.209;
			LEVEL 1 FOR 8.791;
			LEVEL 0 FOR 11.209;
			LEVEL 1 FOR 8.791;
			LEVEL 0 FOR 11.209;
			LEVEL 1 FOR 9.261;
			LEVEL 0 FOR 10.739;
			LEVEL 1 FOR 9.261;
			LEVEL 0 FOR 10.739;
			LEVEL 1 FOR 9.261;
			LEVEL 0 FOR 10.704;
			LEVEL 1 FOR 9.656;
			LEVEL 0 FOR 10.344;
			LEVEL 1 FOR 660.824;
		}
	}
}

TRANSITION_LIST("encodedOut[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.789;
			LEVEL X FOR 4.851;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 8.687;
			LEVEL 0 FOR 0.074;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.149;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.149;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.149;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.149;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.149;
			LEVEL 0 FOR 10.851;
			LEVEL 1 FOR 9.186;
			LEVEL 0 FOR 10.814;
			LEVEL 1 FOR 9.186;
			LEVEL 0 FOR 10.814;
			LEVEL 1 FOR 9.186;
			LEVEL 0 FOR 10.779;
			LEVEL 1 FOR 9.581;
			LEVEL 0 FOR 10.419;
			LEVEL 1 FOR 660.544;
		}
	}
}

TRANSITION_LIST("encodedOut[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.909;
			LEVEL X FOR 4.11;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.797;
			LEVEL 1 FOR 8.376;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.868;
			LEVEL 1 FOR 8.305;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.868;
			LEVEL 1 FOR 8.305;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 0.403;
			LEVEL 0 FOR 0.777;
			LEVEL 1 FOR 8.396;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 9.576;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 9.576;
			LEVEL 0 FOR 10.424;
			LEVEL 1 FOR 9.598;
			LEVEL 0 FOR 10.402;
			LEVEL 1 FOR 661.557;
		}
	}
}

TRANSITION_LIST("encodedOut[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.253;
			LEVEL X FOR 3.865;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.16;
			LEVEL 1 FOR 7.641;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 0.071;
			LEVEL 0 FOR 0.33;
			LEVEL 1 FOR 7.471;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 7.872;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 1.17;
			LEVEL 0 FOR 0.579;
			LEVEL 1 FOR 7.872;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 9.621;
			LEVEL 0 FOR 10.379;
			LEVEL 1 FOR 662.503;
		}
	}
}

TRANSITION_LIST("validOut")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.975;
			LEVEL X FOR 4.447;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.307;
			LEVEL 0 FOR 8.693;
			LEVEL 1 FOR 11.091;
			LEVEL 0 FOR 8.909;
			LEVEL 1 FOR 11.091;
			LEVEL 0 FOR 8.909;
			LEVEL 1 FOR 11.091;
			LEVEL 0 FOR 9.379;
			LEVEL 1 FOR 10.621;
			LEVEL 0 FOR 9.379;
			LEVEL 1 FOR 10.621;
			LEVEL 0 FOR 9.379;
			LEVEL 1 FOR 10.586;
			LEVEL 0 FOR 9.774;
			LEVEL 1 FOR 10.226;
			LEVEL 0 FOR 660.522;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decodedIn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "encodedOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "encodedOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "encodedOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "encodedOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "encodedOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "validOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
